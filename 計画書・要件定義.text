Webアプリケーション「Matching Board」計画書・要件定義

  1. プロジェクト概要

   - プロジェクト名: Matching Board (マッチングボード)
   - 目的: 特定のテーマ（例: スキル交換、趣味の仲間探しなど
     ）に関する情報を投稿・閲覧できる、シンプルなWeb掲示板
     アプリケーションを開発する。
   - ゴール: モダンな技術（React,
     Supabase）を用いたフルスタックWebアプリケーション開発
     の基本を習得し、実際に動作するプロトタイプを完成させ、
     インターネット上に公開する。

  2. ターゲットユーザー

   - 掲示板に投稿された情報を閲覧したいすべての人。
   - 新しい情報を投稿し、他のユーザーと共有したい人。

  3. 機能要件定義

  ユーザーがアプリケーションで「何ができるか」を定義しま
  す。


  ┌────┬─────┬───────────────────────────────────┬──┐
  │ 大項 │ 機能 │ ユーザー体験（User Story）        │  │
  ├────┼─────┼───────────────────────────────────┼──┤
  │ **   │ **投  │ ユーザーは、トップページで全て... │  │
  │    │ **投  │ ユーザーは、一覧から特定の投稿... │  │
  │ **   │ **新  │ ユーザーは、「新規投稿」ボタン... │  │
  │ **   │ **投  │ 投稿者は、自分が作成した投稿を... │  │
  │ **   │ **ユ  │ ユーザーは、アカウント登録とロ... │  │
  └────┴─────┴───────────────────────────────────┴──┘


  4. 非機能要件定義

  アプリケーションの品質や性能に関する要件を定義します。

   - ユーザビリティ:
       - 直感的で分かりやすい、シンプルなデザインにする。
       - PCとスマートフォンの両方で見やすいレスポンシブデザ
         インに対応する。
   - パフォーマンス:
       - ページの表示やデータの読み込みが高速（3秒以内）で
         あること。
   - セキュリティ:
       - データベースに接続するためのAPIキーなどの機密情報
         が、外部に漏洩しないように安全に管理する。
   - 拡張性:
       - 将来的に、コメント機能やユーザープロフィール機能な
         どを追加しやすい設計にする。

  5. 技術スタック（使用するツール）

   - フロントエンド: React, Vite, JavaScript
   - バックエンド & DB: Supabase (PostgreSQL)
   - コード管理: Git / GitHub
   - ホスティング (公開): Render

  6. 開発ロードマップ（今後の進め方）


  ┌───┬─────┬───────────────────────────────────────┐
  │ フ │ 内容 │ 主なタスク                            │
  ├───┼─────┼───────────────────────────────────────┤
  │ * │ **基  │ (完了) プロジェクト作成、DB設計、G... │
  │ * │ **コ  │ ・Supabaseとの接続設定<br>・投稿デ... │
  │ * │ **U   │ ・投稿詳細表示ページの作成<br>・基... │
  │ * │ **応  │ ・ユーザー認証機能の追加<br>・投稿... │
  └───┴─────┴───────────────────────────────────────┘

  ---